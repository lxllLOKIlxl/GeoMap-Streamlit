import streamlit as st
import folium
import pandas as pd
import requests
import matplotlib.pyplot as plt
from geopy.geocoders import Nominatim
from streamlit_folium import st_folium

#–°—Ç–∏–ª—ñ
st.markdown("""
    <style>
    @keyframes glow {
        0% {color: #ff0066;}
        50% {color: #0ff;}
        100% {color: #ff0066;}
    }

    .title {
        font-size: 40px;
        font-weight: bold;
        text-align: center;
        animation: glow 2s infinite alternate;
    }

    .stTextArea, .stSelectbox {
        border: 2px solid #0ff;
        box-shadow: 0px 0px 10px #0ff;
        font-size: 18px;
        padding: 10px;
    }

    .stButton > button {
        background-color: #ff0066;
        color: white;
        border-radius: 8px;
        box-shadow: 0px 0px 10px #ff0066;
        transition: 0.3s;
    }
    .stButton > button:hover {
        background-color: #ff3399;
        box-shadow: 0px 0px 20px #ff3399;
    }
    </style>
""", unsafe_allow_html=True)

#–ö–µ—à—É–≤–∞–Ω–Ω—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
@st.cache_data
def get_coordinates(place_name):
    geolocator = Nominatim(user_agent="geo_locator")
    location = geolocator.geocode(place_name)
    return (location.latitude, location.longitude) if location else None

#–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –∫–æ–ª—å–æ—Ä–∏ —Ç–æ—á–æ–∫ (—É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é)
categories = ["A", "B", "C", "D"]
colors = {"–ß–µ—Ä–≤–æ–Ω–∏–π": "red", "–ó–µ–ª–µ–Ω–∏–π": "green", "–†–æ–∂–µ–≤–∏–π": "pink", "–°–∏–Ω—ñ–π": "blue"}

#–ê–Ω—ñ–º–æ–≤–∞–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown(f"<div class='title'>–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞ –∫–∞—Ä—Ç–∞ —Ä–∞–π–æ–Ω—ñ–≤</div>", unsafe_allow_html=True)

# –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –≤–≤–µ–¥–µ–Ω–Ω—è —Ä–∞–π–æ–Ω—ñ–≤
district_input = st.text_area("üìç –í–≤–µ–¥—ñ—Ç—å —Ä–∞–π–æ–Ω–∏ —á–µ—Ä–µ–∑ –∫–æ–º—É", "–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω, –ö–∞–ª—É—Å—å–∫–∏–π —Ä–∞–π–æ–Ω, –ö–æ–ª–æ–º–∏–π—Å—å–∫–∏–π —Ä–∞–π–æ–Ω")
districts = [d.strip() for d in district_input.split(",")]

#–í–∏–±—ñ—Ä –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó —Ç–∞ –∫–æ–ª—å–æ—Ä—É –º–∞—Ä–∫–µ—Ä—ñ–≤
selected_category = st.selectbox("üìå –û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é", categories)
selected_color_name = st.selectbox("üñåÔ∏è –û–±–µ—Ä—ñ—Ç—å –∫–æ–ª—ñ—Ä –º–∞—Ä–∫–µ—Ä—ñ–≤", list(colors.keys()))
selected_color = colors[selected_color_name]  # –ü–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç Folium

#–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–æ–≤–æ—ó –∫–∞—Ä—Ç–∏
m = folium.Map(location=[48.9226, 24.7103], zoom_start=8)
cat_groups = {c: folium.FeatureGroup(c).add_to(m) for c in categories}
folium.LayerControl().add_to(m)

#–î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ—á–æ–∫
for district in districts:
    coords = get_coordinates(district)
    if coords:
        folium.Marker(location=coords, popup=district, icon=folium.Icon(color=selected_color)).add_to(cat_groups[selected_category])

#–ê–Ω–∞–ª—ñ–∑ –Ω–∞—Å–µ–ª–µ–Ω–Ω—è
population_data = pd.DataFrame({
    "–†–µ–≥—ñ–æ–Ω": ["–Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω", "–ö–∞–ª—É—Å—å–∫–∏–π —Ä–∞–π–æ–Ω", "–ö–æ–ª–æ–º–∏–π—Å—å–∫–∏–π —Ä–∞–π–æ–Ω"],
    "–ù–∞—Å–µ–ª–µ–Ω–Ω—è": [230000, 150000, 180000]
})

selected_region = st.selectbox("üìà –û–±–µ—Ä—ñ—Ç—å —Ä–µ–≥—ñ–æ–Ω –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É", population_data["–†–µ–≥—ñ–æ–Ω"])
region_population = population_data[population_data["–†–µ–≥—ñ–æ–Ω"] == selected_region]["–ù–∞—Å–µ–ª–µ–Ω–Ω—è"].values[0]
st.write(f"üë• –ù–∞—Å–µ–ª–µ–Ω–Ω—è —Ä–µ–≥—ñ–æ–Ω—É: {region_population}")

#–ì—Ä–∞—Ñ—ñ–∫ –Ω–∞—Å–µ–ª–µ–Ω–Ω—è
fig, ax = plt.subplots()
ax.bar(population_data["–†–µ–≥—ñ–æ–Ω"], population_data["–ù–∞—Å–µ–ª–µ–Ω–Ω—è"], color="blue")
ax.set_ylabel("–ù–∞—Å–µ–ª–µ–Ω–Ω—è")
ax.set_title("–ù–∞—Å–µ–ª–µ–Ω–Ω—è —Ä–µ–≥—ñ–æ–Ω—ñ–≤")
st.pyplot(fig)

#–ö—É—Ä—Å –≤–∞–ª—é—Ç
response = requests.get("https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json")
exchange_rates = response.json()
usd_rate = next(item for item in exchange_rates if item["cc"] == "USD")["rate"]
eur_rate = next(item for item in exchange_rates if item["cc"] == "EUR")["rate"]
st.write(f"üí∞ –ö—É—Ä—Å USD: {usd_rate} –≥—Ä–Ω")
st.write(f"üí∂ –ö—É—Ä—Å EUR: {eur_rate} –≥—Ä–Ω")

#–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–∞—Ä—Ç–∏ —É Streamlit
st_folium(m, width=700, height=500)

#–ü—ñ–¥–ø–∏—Å –∞–≤—Ç–æ—Ä–∞
st.markdown("<div style='text-align: center; font-size: 20px; font-weight: bold; margin-top: 20px;'>–ê–≤—Ç–æ—Ä: –®–∞–±–ª—ñ–Ω—Å—å–∫–∏–π –°.–Ü.</div>", unsafe_allow_html=True)
